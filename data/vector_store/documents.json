{
  "documents": [
    "Основы т еории информации С Л О Ж Н О С Т ЬД И С К Р Е Т Н А Я М А Т Е М А Т И К Ал о н г р и дН Е Д Е Л Я 7Москв а 2 025Основы теории информации Основы теории информации •Задача об угадывании числа. Бинарный поиск Краткий план •Нижняя оценка сложности задачи •Лексикографический порядок и кодирование •Оценка сложности сортировки •Задачи с ограничениями на вид вопросов •Неадаптивный вариант задачи об угадывании •Тернарные вопросы 1.ЗАДАЧА НА УГАДЫВАНИЕ ЧИСЛА. БИНАРНЫЙ ПОИСК В этом лонгриде мы рассмотрим игру: допустим, кто-то загадывает произвольный элемент n-элементного множества, за какое количество бинарных вопросов можно отгадать ответ? Бинарным называется вопрос, ответ на который может быть только «да» или «нет». Илья загадывает натуральное число от 1до1000 , а Алла хочет его отгадать. Докажи, что за 10вопросов Алла справится, если Илья на эти вопросы может отвечать только «да» и «нет».ПРИМЕР 1 Кажется, что оптимальной стратегией Аллы будет каждый раз сокращать количество оставшихся возможных чисел примерно вдвое. Тогда Алла может задать такой во- прос: «Это число меньше 500?» Если Илья ответит «да», то в следующий раз Алла спросит «Это число меньше 250?» и так далее. С каждым шагом длина отрезка уменьшается почти вдвое, так как если в отрезке было нечётное число точек, то в следующем отрезке может оказаться чуть больше половины точек. Чтобы избежать «приблизительных» оценок и доказать, что через 10 шагов в отрезке наверняка останется одна точка и Алла узнает число Ильи, продела- ем следующий трюк. Представим, что число, которое загадал Илья, лежит в диапа- зоне не от 1до1000 , а в дипазоне от 1до1024 = 210. Тогда каждый раз Алла будет делить этот диапазон ровно надвое; и в первом отрезке будет 512чисел, потом 256, на10-м шаге останется выбрать из 2чисел, и задача будет решена.РЕШЕНИЕ Такой метод угадывания называется бинарным поиском . Покажем, что он работает и для произвольного n. Илья загадывает натуральное число от 1доN, а Алла хочет его отгадать. Докажи, что для этого Алле понадобится не больше ⌈log2N⌉вопросов, на которые Илья может отвечать только «да» и «нет».ПРИМЕР 1’ Обозначим k=⌈log2N⌉иN′— ближайшую степень двойки, большую, чем N, то естьN′= 2k. Пусть теперь Алла считает, что Илья может загадать число от 1доN′. На самом деле Илья может загадывать только числа от 1доN, но Алла будет рас- сматривать эти дополнительные возможности для удобства. В этом случае на каждом шаге алгоритма в отрезке будет всегда чётное количество точек, более того, их число всегда будет равно какой-то степени двойки.РЕШЕНИЕ 2Основы теории информации 1.Обозначим число, загаданное Ильей, через x. На каждом шаге Алла будет знать, чтоxлежит в некотором отрезке {y:a⩽y⩽b}для каких-то aиb. Изначально a= 1иb=N′. 2.На следующем шаге Алла спросит, верно ли, что x⩽N′ 2. Если Илья отвечает «да», то Алла переходит к отрезку {y:a⩽y⩽N′ 2}и повторяет процедуру. Иначе, Ал- ла переходит к отрезку {y:N′ 2+ 1⩽y⩽b}и также повторяет процедуру. Для примера 1будет такая последовательность: 512,256,128,...,2,1. Поэтому, чтобы длина отрезка стала равной 1, потребуется ровно log2N′=kвопросов. В самом начале мы сказали, что этот алгоритм кажется оптимальным, но как это доказать? Можно было бы подумать, что «очевидно» он самый оптимальный и нечего тут доказывать. Но",
    "{y:N′ 2+ 1⩽y⩽b}и также повторяет процедуру. Для примера 1будет такая последовательность: 512,256,128,...,2,1. Поэтому, чтобы длина отрезка стала равной 1, потребуется ровно log2N′=kвопросов. В самом начале мы сказали, что этот алгоритм кажется оптимальным, но как это доказать? Можно было бы подумать, что «очевидно» он самый оптимальный и нечего тут доказывать. Но мы в очередной раз на- помним, что рассмотрение конкретных примеров алгоритмов не является доказательством утверждения «более оптимального алгоритма не существует», которое является утверждением о всеобщности. Наша цель – доказать, что этот алгоритм действительно оптимальный. Для этого нужно сначала уточнить, что значит «оптимальный». Чтобы это формализовать, введем (или напомним) несколько определений, связанных с теорией алгоритмов. 2.НИЖНЯЯ ОЦЕНКА СЛОЖНОСТИ ЗАДАЧИ Худшим случаем для алгоритма будем называть такой набор получаемых данных, при котором алгоритм делает максимально возможное число шагов, прежде чем завершиться (максимальное относительно всех остальных наборов входных данных). Сложностью алгоритма называется количество шагов, за которое алгоритм завершается в худшем случае. То есть мы будем говорить, что алгоритм имеет сложность k, если при любых ответах Ильи алгоритм завершается не более чем за kшагов, причем при каких-то ответах он завершается ровно за kшагов. Обычно в математических доказательствах рекомендуется избегать слов «худший случай». Но когда мы говорим о сложности алгоритмов, этому понятию удается дать строгое определение, так что здесь проблемы не возникает.) Корректный алгоритм – это такой алгоритм, что он на любых корректных входных данных завершается и дает правильный ответ. Оптимальным алгоритмом называется такой, сложность которого минимальна среди всех корректных алгоритмов. Пример неоптимального алгоритма для исходной задачи – спросить «твое число равно 1?», затем «твое число равно 2?» и так далее. Если повезет, этот алгоритм может завершиться за один шаг. Однако в худ- шем случае, если было загадано число N, потребуется N−1вопросов, чтобы отгадать число. Значит, сложность такого алгоритма равна N−1. Наша цель – доказать, что не существует алгоритма для решения поставленной задачи, сложность кото- рого меньше ⌈log2N⌉. Любой корректный алгоритм в задаче об угадывании числа от 1доNв худшем случае потребует не менее ⌈log2N⌉вопросов.ЛЕММА 1 •Первый способ (принцип Дирихле). Пусть у Аллы есть какая-то стратегия угады- вания числа не более чем за kвопросов, Илья загадал какое-то число и Алла зада- ла свои kвопросов. Запишем ответы Ильи в виде двоичной последовательности: если на очередной вопрос Илья ответил «да», запишем единицу, а если «нет» —ДОКАЗАТЕЛЬСТВО 3Основы теории информации ноль. Тогда длина этой последовательности из 0и1не больше k. Заметим, что для двух разных загаданных Ильей чисел последовательности не могут совпадать. Действительно, пусть для двух различных xиyИлья дает Алле одинаковые ответы, тогда для Аллы эти случаи не различимы, поскольку её диа- логи с Ильей для чисел xи для yвыглядят одинаково. При этом Алла после этого диалога выдает какой-то ответ, который определяется только состоявшимся диа- логом. Значит, в одном из случаев её ответ будет неправильным. Далее заметим, что не может случиться так, что для двух различных xиy, зага- данных Ильей, вся цепочка ответов для xявляется началом цепочки ответов для y. Действительно, пусть диалог Аллы с Ильей выглядит одинаково для xиyдо тех пор, пока не будут заданы все вопросы из цепочки ответов для x. Тогда к этому моменту Алла не может отличить xотy, но, с одной стороны, она уже угадает x, а с",
    "ответов для xявляется началом цепочки ответов для y. Действительно, пусть диалог Аллы с Ильей выглядит одинаково для xиyдо тех пор, пока не будут заданы все вопросы из цепочки ответов для x. Тогда к этому моменту Алла не может отличить xотy, но, с одной стороны, она уже угадает x, а с другой, в то же время, задаст следующий вопрос. Таким образом, мы можем сопоставить каждому числу от 1доNединственную последовательность из не более чем kнулей и единиц, причем все эти последо- вательности различны, и ни одна не является началом другой. В каждой из наших Nпоследовательностей не более kэлементов. Для удобства, если в каких-то последовательностях менее kэлементов, допишем к ним в конец еще нулей, чтобы длина всех была одинакова и равна k. Таким образом, каждому числу от 1доNсоответствует последовательность дли- ныkиз нулей и единиц, и все эти последовательности различны. Но всего суще- ствует ровно 2kпоследовательностей из нулей и единиц длины k. По принципу Дирихле, чисел от 1доNдолжно быть не больше 2k(иначе двум разным числам соответствуют одинаковые последовательности). Значит N⩽2k, то есть k⩾log2N. Поскольку k–– целое число, то k⩾⌈log2N⌉. •Второй способ (игра). У этого доказательства есть игровая форма, которая иногда более удобна для доказательства нижних оценок: рассуждение с противником. Представим себе, что Илья придерживается такой стратегии, чтобы Алла зада- вала как можно больше вопросов. Таким образом, Илья старается реализовать худший случай для Аллы. Рассуждение с противником позволяет свести доказательство нижней оценки к конструктивному: вместо того, чтобы доказывать, что у Аллы нет стратегии, мы можем строить стратегию Ильи, которая будет работать против всех способов угадать число. Итак, мы рассматриваем нашу модель как игру. Алла задает вопросы, а Илья дает на них ответы. Цель Аллы — угадать число за не более чем ⌈log2N⌉вопросов, а цель Ильи — помешать Алле это сделать. Любой вопрос, который задает Алла, разбивает множество оставшихся вариантов на два подмножества: те варианты, которые остаются возможными после отве- та «да», и те варианты, которые остаются возможными после ответа «нет». Пусть 4Основы теории информации Илья придерживается такой стратегии: он всегда будет отвечать так, чтобы оста- валось большее из этих подмножеств (если они одинаковы по размеру, то он вы- бирает любое из них). Тогда после каждого ответа количество оставшихся вариан- тов у Аллы уменьшится не более, чем в 2раза. Но тогда за kвопросов количество оставшихся вариантов уменьшится не более чем в 2kраз. Если k <log2N, то 2k< N , и значит, за kвопросов количество оставшихся вариантов уменьшится строго менее чем в Nраз. Но это значит, что после этих вопросов у Аллы оста- нется строго более одного варианта, и она не сможет наверняка сказать, какое число было загадано. Итак, мы доказали следующий факт: оптимальный алгоритм угадывания числа от 1доNимеет сложность ⌈log2N⌉. Такая оценка называется информационной границей , потому что определяет нижнюю границу числа вопросов исходя из имеющейся информации об ответах на них. 3.ЗАДАЧА ОБ УГАДЫВАНИИ ПЕРЕСТАНОВКИ. СЛОЖНОСТЬ СОРТИРОВКИ Теперь попробуем угадывать не числа, а что-нибудь другое, например, перестановки чисел. Оказывается, у этой задачи есть полезное применение в теории алгоритмов. Илья загадал перестановку чисел от 1до10. За какое минимальное число бинарных вопросов Алла наверняка сможет ее отгадать?ПРИМЕР 2 Неверное решение. Первое, что приходит в голову, – отгадывать каждый элемент по",
    "попробуем угадывать не числа, а что-нибудь другое, например, перестановки чисел. Оказывается, у этой задачи есть полезное применение в теории алгоритмов. Илья загадал перестановку чисел от 1до10. За какое минимальное число бинарных вопросов Алла наверняка сможет ее отгадать?ПРИМЕР 2 Неверное решение. Первое, что приходит в голову, – отгадывать каждый элемент по отдельности. Запишем перестановку в виде последовательности чисел. Тогда первый ее элемент может быть любым число от 1до10, и чтобы его угадать, нужно 4вопроса. Для второго элемента остается 9вариантов, и нужно тоже 4вопроса; для третьего объекта уже достаточно трёх вопросов (так как он выбирается из 8элементов, а это степень двойки) и так далее. Всего тогда понадобится 4 + 4 + 3 + 3 + 3 + 3 + 2 + 2 + 1 = 25 вопросов. Но, возможно, уже возникает ощущение, что при таком способе мы используем вопросы «неэффективно». Какой же алгоритм тогда оптимальный? Верное решение. Как известно, всего перестановок из 10различных элементов мо- жет ровно 10!. Пронумеруем их каким-нибудь способом и запишем их номера по воз- растанию. Теперь, чтобы решить задачу, будем задавать такой вопрос: «Номер загаданной пе- рестановки в этом списке меньше, чем10! 2?» Если нам скажут «да», то следующий вопрос будет «Номер загаданной перестановки в этом списке меньше, чем10! 4?» Таким образом, мы свели задачу отгадывания перестановки к задаче отгадывания числа. А значит, мы точно отгадаем число за ⌈log210!⌉= 22 вопросов. Почему нельзя отгадать быстрее? Рассуждения точно такие же, как и при доказатель- стве оценки сложности угадывания числа (можно рассуждать через принцип Дирих- ле, можно через игру). Мы не будем повторять текст рассуждений заново, в качестве упражнения предлагаем сделать это самостоятельно, заменив в тексте отгадывание числа на отгадывание перестановки.РЕШЕНИЕ По поводу приведенного алгоритма может возникнуть вопрос: а что значит «Пронумеруем их каким- нибудь способом »? Разве так можно было? Чтобы наши вопросы были корректными, конечно, нужно сна- 5Основы теории информации чала уточнить способ нумерации перестановок. Удобнее и проще всего использовать способ, который называется лексикографическим порядком . Лексикографический порядок — это отношение линейного порядка на множестве конечных последовательностей (которые еще называют словами). Своё название лексикографический порядок получил по аналогии с сортировкой по алфавиту в сло- варе. Слово αпредшествует слову β(α≺β), если: •либо первые mсимволов этих слов совпадают, а (m+ 1) -й символ слова α меньше (относительно заданного в Σпорядка) (m+ 1) -го символа слова β(на- пример, АБАК ≺АБРАКАДАБРА, так как первые две буквы у этих слов совпадают, а третья буква у первого слова меньше, чем у второго); •либо слово αявляется началом слова β(например, МАТЕМАТИК ≺МАТЕМАТИКА.ОПРЕДЕЛЕНИЕ 1 Если рассмотреть лексикографический порядок на перестановках из 5элементов, то начало списка будет выглядеть так: 12345 ,12354 ,12435 ,12453 ,12534 ,12543 ,13245 ,13254 , ... . Окончание списка будет таким: 54231 ,54312 ,54321 . Итак, в рассмотренном примере мы свели задачу угадывания перестановки к задаче угадывания числа. Но вообще-то так можно рассуждать не только про перестановки, но и про размещения, про сочетания, про перестановки или сочетания с повторениями... — совершенно неважно, что именно мы отгадываем. Важно только, что количество элементов в множестве возможных вариантов конечно. Тогда, чтобы перейти к универсальному алгоритму отгадывания элемента из n-элементного множества, нужно договориться о кодировке , то есть записать все элементы",
    "но и про размещения, про сочетания, про перестановки или сочетания с повторениями... — совершенно неважно, что именно мы отгадываем. Важно только, что количество элементов в множестве возможных вариантов конечно. Тогда, чтобы перейти к универсальному алгоритму отгадывания элемента из n-элементного множества, нужно договориться о кодировке , то есть записать все элементы этого множества в занумерованный спи- сок в лексикографическом порядке. После этого можно будет просто угадывать число от 1доn, обозна- чающее номер загаданного элемента. По сути, мы доказали следующую важную теорему. Если есть произвольное множество из nобъектов и разрешено задавать любые би- нарные вопросы, то оптимальный алгоритм отгадывания элемента из этого множе- ства имеет сложность ⌈log2n⌉.ТЕОРЕМА 1 Получается, что когда мы занимаемся отгадыванием, мы на самом деле занимаемся кодированием , по- тому что каждый из элементов кодируем в двоичном виде (так как ответ «да» можно записывать как еди- ницу, а ответ «нет» — как ноль). Значит, для всех элементов мы разработали двоичные коды, взаимно однозначно соответствующие элементам. Теперь понятно, что вместо того, чтобы задавать вопросы про положение элемента в списке, можно отга- дывать его двоичный код. Для этого надо закодировать элементы оптимальным способом и спрашивать биты по одному. Это то же самое, что мы делали до этого, просто в другой форме. Из всего вышесказанного следует такой факт: Если есть произвольное множество из nэлементов, то достаточно ⌈log2n⌉бит, чтобы закодировать произвольный элемент этого множества.ТЕОРЕМА 2 По сути, эта теорема утверждает то же самое, что и предыдущая, просто в других терминах. 6Основы теории информации 4.ОЦЕНКА СЛОЖНОСТИ СОРТИРОВКИ В предыдущем разделе мы доказали, что любой алгоритм решения задачи об угадывании перестановки изNэлементов, если можно задавать лишь бинарные вопросы, имеет сложность не меньше ⌈log2N!⌉. Но нетрудно понять, что эта задача эквивалентна задаче о сортировке массива чисел. А именно, пусть есть произвольный набор различных чисел a1< ... < a nи пусть эти числа записаны в некотором порядке. Это эквивалентно тому, что задана некоторая перестановка от 1доn, определяющая порядок записи этих чисел. Но тогда отгадать перестановку, задавая бинарные вопросы, – это все равно что отгадать порядок чисел относительно их правильного порядка. То есть отгадать перестановку – значит решить задачу о сортировке данных nчисел. В теории алгоритмов изучаются алгоритмы сортировки массива, которые в худшем случае завершаются заO(nlogn)операций сравнения элементов (например, сортировка слиянием или пирамидальная сор- тировка). Используя задачу об отгадывании перестановки, мы можем доказать, что эти алгоритмы оп- тимальны, то есть не существует алгоритма сортировки, задающего лишь бинарные вопросы о массиве, который в худшем случае завершался бы быстрее. Поясним фразу «алгоритм сортировки, задающий лишь бинарные вопросы». Предположим, что алгоритм в какой-то момент вычисляет сумму a1+a2и делает несколько разных действий в зависимости от того, чему равна эта сумма. Это не является бинарным вопросом, так как вопрос «чему равно a1+a2» до- пускает более двух вариантов ответа. С другой стороны, проверка a1+a2< a 3+a4является бинарным вопросом, так как на него возможны лишь два ответа «да» и «нет». Любой алгоритм, который решает задачу сортировки произвольных nэлементов, ес- ли разрешено задавать лишь бинарные вопросы, в худшем случае завершается не менее чем за O(nlogn)действий.ТЕОРЕМА 3 Поскольку мы объяснили, что задача сортировки массива с помощью бинарных во- просов эквивалентна задаче отгадывания перестановки, нам достаточно доказать, что отгадывание перестановки",
    "«да» и «нет». Любой алгоритм, который решает задачу сортировки произвольных nэлементов, ес- ли разрешено задавать лишь бинарные вопросы, в худшем случае завершается не менее чем за O(nlogn)действий.ТЕОРЕМА 3 Поскольку мы объяснили, что задача сортировки массива с помощью бинарных во- просов эквивалентна задаче отгадывания перестановки, нам достаточно доказать, что отгадывание перестановки бинарными вопросами нельзя завершить в худшем случае быстрее, чем за O(nlogn)вопросов. Мы уже знаем, что отгадывание перестановки в худшем случае требует как минимум ⌈log2n!⌉действий. Запишем цепочку неравенств, предполагая, что nчетное: ⌈log2n!⌉⩾log2n! = log21 + log22 +...+ log2n⩾ ⩾log2(n 2+ 1) + log2(n 2+ 2) +...+ log2n⩾n 2·log2n 2⩾ ⩾n 2(log2n−log22) =n 2log2n−n 2=n 2log2n+o(nlogn) =O(nlogn).1) Если же nнечетное, то выкладка почти не меняется: log21 + log22 +...+ log2n⩾ ⩾log2(n+ 1 2+ 1) + log2(n+ 1 2+ 2) +...+ log2n⩾n 2·log2n 2⩾ ⩾n 2(log2n−log22) =n 2log2n−n 2=n 2log2n+o(nlogn) =O(nlogn).2)ДОКАЗАТЕЛЬСТВО 7Основы теории информации Итак, в любом случае количество необходимых операций оценивается снизу как O(nlogn), что и требовалось доказать. 5.ЗАДАЧИ С ОГРАНИЧЕНИЯМИ НА ВИД ВОПРОСОВ До этого мы рассматривали задачи, в которых разрешалось задавать любые бинарные вопросы. Но часто бывает так, что вид вопросов ограничен. Например, распространенная ситуация – когда за один вопрос можно лишь сравнивать два элемента из данных n, а не выяснять истинность произвольного утверждения о наборе элементов. Рассмотрим пример. Дано nмонет разного веса. За один ход разрешается сравнить по весу две из них на чашечных весах. За какое наименьшее число взвешиваний можно гарантированно найти самую тяжелую монету?ПРИМЕР 3 Пример. Cначала докажем, что n−1взвешивания достаточно. Проще всего вести рассуждение по индукции. Если n= 1, то ничего взвешивать не нужно, то есть нужно 0взвешиваний. Пусть мы доказали утверждение для k−1монет. Пусть теперь нам даныkмонет. Возьмем любые две и сравним их. Заметим, что более легкая из них не может быть самой тяжелой, так что ее можно выбросить из рассмотрения. Таким об- разом, у нас остается k−1монета, и по предположению индукции мы можем найти самую тяжелую из них за k−2оставшихся взвешивания. Оценка. Теперь докажем, что меньше чем за n−1взвешивание найти самый тя- желый объект нельзя. Предположим, что существует алгоритм, который делает это заn−2взвешивания. В очередной раз напомним, что для доказательства оценки бесполезно рассматривать конкретные алгоритмы и утверждать, что какой-то из них «оптимальный»; нужно вести рассуждение в общем случае.) Будем называть монету проигравшей , если она оказалась легче другой хотя бы в од- ном взвешивании. Заметим, что при каждом взвешивании проигрывает ровно одна монета, так что при каждом взвешивании не более одной новой монеты становит- ся проигравшей. Это значит, что за n−2взвешивания проигравшими окажутся не более n−2монет, то есть хотя бы 2монеты окажутся не проигравшими. Но про те монеты, которые не проиграли ни в одном взвешивании, мы не можем достоверно утверждать, что они не самые тяжелые. Значит, после n−2взвешиваний останется как минимум две монеты, относительно которых мы будем не уверены, которая из них является искомой. Противоречие.РЕШЕНИЕ Если бы в этой задаче нам было разрешено задавать любые бинарные вопросы про данные монеты, то действовала бы теорема из предыдущего раздела: мы могли бы справиться за ⌈log2n⌉вопросов, что го- раздо меньше, чем n−1. Какие это были бы вопросы? Нужно было бы пронумеровать монеты и начать спрашивать «Номер самой тяжелой монеты",
    "бы в этой задаче нам было разрешено задавать любые бинарные вопросы про данные монеты, то действовала бы теорема из предыдущего раздела: мы могли бы справиться за ⌈log2n⌉вопросов, что го- раздо меньше, чем n−1. Какие это были бы вопросы? Нужно было бы пронумеровать монеты и начать спрашивать «Номер самой тяжелой монеты больше, чемn 2?» и так далее. Как мы видим, ситуация карди- нально меняется, если набор возможных вопросов ограничен. А что, если нам нужно отсортировать nэлементов по возрастанию, но разрешено лишь попарно сравни- вать элементы? Об этом следующая задача. Дано 5монеток разного веса. За один шаг разрешается сравнить веса двух монет на чашечных весах. За какое минимальное число взвешиваний можно отсортироватьПРИМЕР 4 8Основы теории информации все монеты по возрастанию веса? Оценка на этот раз очевидно следует из общей теоремы. Даже задавая произволь- ные бинарные вопросы, мы не смогли бы справиться быстрее чем за ⌈log25!⌉= ⌈log2120⌉= 7взвешиваний. Значит, мы и подавно не сможем справиться быстрее, если вид вопросов ограничен. Пример построить сложнее. Если действовать как попало, то в худшем случае мы придем в ситуацию, когда 7взвешиваний не хватило, поэтому нужно действовать ак- куратно. Пусть монеты называются A,B,C,D,E. Сначала сравним AиB. Без ограничения общности будем считать, что A > B (если это не так, то переименуем их наоборот). Далее сравним CиD, без ограничения общности будем считать C > D . Третьим взвешиванием сравним AиC. Без ограничения общности будем считать, чтоA > C (если это оказалось не так, то переименуем A↔CиB↔D). Теперь мы знаем, что A > C > D . Потратим еще два взвешивания (итого пять), что- бы найти место Eсреди этой тройки (сравним EиC, в зависимости от результата сравним с Aили с D). Теперь мы знаем правильный порядок среди {E,C,D }. Оставшиеся два взвешива- ния потратим, чтобы найти место Bсреди этой тройки. При этом положение Bотно- сительно Aмы уже знаем, так что в итоге получим отсортированный массив.РЕШЕНИЕ Можно было бы подумать, что аналогично 6монет можно упорядочить за ⌈log26!⌉= 10 взвешиваний, 7монет – за ⌈log27!⌉= 12 взвешиваний, и так далее. Но оказывается, уже для 12монет эта оценка дает неправильный ответ! Компьютерным перебором можно доказать, что 12монет нельзя упорядо- чить в худшем случае меньше чем за 30взвешиваний, несмотря на то, что наша оценка дает число ⌈log212!⌉=⌈log2479001600 ⌉= 29 . Эта задача демонстрирует, что оптимальные алгоритмы могут быть устроены очень сложно и неочевидно, а построение примера такого алгоритма может требовать огром- ного перебора вариантов, который нереально провести без компьютерных вычислений. Но разумеется, если бы было разрешено задавать любые бинарные вопросы, а не только делать попарные сравнения, то оценка ⌈log2n!⌉точна и мы бы всегда справились за такое количество взвешиваний, используя очень простой алгоритм. В общем случае ответ на вопрос «какое наименьшее число попарных сравнений гарантированно доста- точно, чтобы отсортировать nобъектов» науке неизвестен. Рассмотрим еще один пример задачи, где нужно узнать что-то, используя лишь бинарные вопросы спе- циального вида. Имеется 6 с виду одинаковых шаров, два из которых радиоактивны. Дозиметром можно проверить на радиоактивность любую группу шаров. За какое наименьшее число проверок можно выявить оба радиоактивных шара?ПРИМЕР 5 Оценка. Докажем, что потребуется хотя бы 5проверок. Пусть возможно определить радиоактивные шары за 4проверки. Тогда рассмотрим, каким может быть первое взвешивание.",
    "Имеется 6 с виду одинаковых шаров, два из которых радиоактивны. Дозиметром можно проверить на радиоактивность любую группу шаров. За какое наименьшее число проверок можно выявить оба радиоактивных шара?ПРИМЕР 5 Оценка. Докажем, что потребуется хотя бы 5проверок. Пусть возможно определить радиоактивные шары за 4проверки. Тогда рассмотрим, каким может быть первое взвешивание. Если мы взяли один шар и дозиметр не пропищал, то осталось C2 5= 10 возможных исходов ( 2радиоактивных среди 5). Если мы взяли два шара и дозиметрРЕШЕНИЕ 9Основы теории информации пропищал, то осталось 9возможных исходов ( 1, если оба выбранных радиоактивны; 8, если один из них). Если мы взяли три шара или больше и дозиметр пропищал, то возможных исходов еще больше, чем 9. Таким образом, за 3оставшихся проверки мы можем получить максимум 23= 8различных последовательностей ответов. Ес- ли мы сделали всего четыре проверки, то после первого хода (на наше взвешивание дозиметр может пропищать или нет, но в любом случае есть результат, который не запрещает хотя бы 9исходов) не получится однозначного соответствия возможных исходов и последовательностей ответов, значит, за 4проверки гарантированно опре- делить радиоактивные шары не получится. Пример. За пять – возможно. Например, каждым действием проверяем ровно один еще не использовавшийся шар. Таким способом про каждый проверенный шар мы узнаем: радиоактивный он или нет, тогда и шестой шар определится однозначно. Вновь заметим, что если бы было разрешено задавать любые бинарные вопросы, то ответ бы изменился. По сути, в этой задаче нам надо было бы отгадать сочетание из 6элементов по 2, а всего таких сочетаний C2 6= 15 . Тогда по общей теореме мы бы справились за ⌈log215⌉= 4вопроса, а не за 5. 6.НЕАДАПТИВНЫЙ ВАРИАНТ ЗАДАЧИ ОБ УГАДЫВАНИИ Вернемся к первоначальной задаче об угадывании числа. Когда Алла угадывала число, она задавала во- просы, зависящие от ответов на Ильи на предыдущие. Такие вычислительные модели обычно называют адаптивными . Теперь усложним задачу: пусть Алла должна заранее составить список вопросов и пере- дать его Илье прежде, чем тот начнет отвечать. После того, как Илья ответит на все эти вопросы, Алла должен назвать загаданное число. То есть теперь мы будем рассматривать неадаптивную постановку той же задачи: вопросы не должны зависеть от ответов на предыдущие вопросы. Теперь задача Аллы стала сложнее, а значит, в неадаптивной модели Алле потребуется не меньше во- просов, чем в адаптивной. Действительно, если Алла может угадать число за kвопросов в неадаптивной модели, то она может сделать то же самое и в адаптивной модели — достаточно просто задать те же вопросы. Таким образом, в новой модели Алле тоже потребуется не меньше ⌈log2N⌉вопросов, чтобы угадать чис- ло от 1доN. Но хватит ли такого числа вопросов, если Алла должна составить список вопросов заранее? Оказывается, что если вопросы произвольные, то ответ на этот вопрос положительный. Вспомним, что мы ранее выяснили: по сути, отгадывая объект из произвольного множества бинарными вопросами, мы занимаемся двоичным кодированием. Чтобы угадать объект ровно за ⌈log2N⌉бинарных вопросов, достаточно пронумеровать все возможные объекты в лексикографическом порядке, а дальше отгадывать по одному биту номер искомого объекта. То есть для каждого натурального iвопрос номер i будет звучать, например, так: «Запишем все объекты в лексикографическом порядке и рассмотрим номер загаданного объекта в двоичной записи. В этой двоичной записи i-й бит",
    "вопросов, достаточно пронумеровать все возможные объекты в лексикографическом порядке, а дальше отгадывать по одному биту номер искомого объекта. То есть для каждого натурального iвопрос номер i будет звучать, например, так: «Запишем все объекты в лексикографическом порядке и рассмотрим номер загаданного объекта в двоичной записи. В этой двоичной записи i-й бит – единица?» Такое рассуждение универсально: оно работает для любой задачи такого типа и любого адаптивного ал- горитма. Получается, что наша теорема остается верной даже для неадаптивной модели. Пусть есть произвольное множество из nобъектов и разрешено задавать любые би- нарные вопросы, но нужно задать все вопросы сразу. Тогда, чтобы отгадать элемент из этого множества, всегда существует способ обойтись ⌈log2n⌉вопросами, а мень- шим числом вопросов обойтись нельзя.ТЕОРЕМА 4 10Основы теории информации Всё снова меняется, если вид вопросов ограничен. Чтобы это проиллюстрировать, вернемся к задаче о поиске максимального элемента в массиве, если разрешены только попарные сравнения элементов. Для нахождения самого тяжелого из nобъектов в неадаптивной модели необходимо и достаточно C2 n=n(n−1)/2взвешиваний.ТЕОРЕМА 5 Верхняя оценка здесь получается совсем просто – достаточно сравнить попарно все объекты друг с другом. Ясно, что если мы сравнили все объекты, то мы можем ска- зать, какой из них самый тяжелый. Для доказательства нижней оценки предположим, от противного, что у нас есть про- токол, который делает меньше C2 nсравнений. Заметим, что сейчас у нас модель неадаптивная, так что протокол – это по существу просто список всех вопросов. Раз вопросов в нем меньше C2 n, значит какие-то два объекта между собой не сравнива- ются. Рассмотрим два таких входа, при котором эти два объекта тяжелее всех осталь- ных и в первом случае, первый объект тяжелее, а во втором – второй (а все остальные объекты сравниваются друг с другом одинаково). Тогда наш протокол на этих входах получит одни и те же ответы, а значит выдаст один и тот же результат. Поскольку самые тяжелые объекты в этих двух входах разные, наш протокол на одном из них ошибается, а значит мы пришли к противоречию.ДОКАЗАТЕЛЬСТВО 7.ТЕРНАРНЫЕ ВОПРОСЫ Напоследок рассмотрим ситуацию, когда ответов на вопросы может быть больше двух. Классический пример такого сценария – задачи о взвешиваниях, когда весы могут выдавать один из трех ответов: «боль- ше», «меньше» или «равно». Стандартная задача, которая возникает в этой ситуации, – это задача о поиске фальшивой монеты сре- диnмонет, если внешне монеты неразличимы, а фальшивая отличается от настоящих по весу. Логично предположить по аналогии с задачей об угадывании числа, что здесь для отгадывания потребуется чис- ло взвешиваний, равное уже не двоичному, а троичному логарифму от n. Сформулируем и докажем это утверждение. Пусть имеется nмонет, среди которых ровно одна (неизвестно, какая именно) – фаль- шивая, на вид неотличимая от настоящих, но более легкая. На чашечных весах можно взвесить любые две группы монет и получить один из трех ответов («больше», «мень- ше» или «равно»). Тогда оптимальный алгоритм поиска фальшивой монеты заверша- ется в худшем случае за ⌈log3n⌉взвешиваний.ТЕОРЕМА 6 Оценка. Для удобства доказательства пронумеруем все nмонет. Тогда нашей целью является определение номера фальшивой монеты – натурального числа от 1доn. Пусть мы как-то проделали kвзвешиваний. Запишем результаты для этого случая в виде строчки из kсимволов <,=,>следующим образом: если в результате взве- шивания левая чаша весов оказалась",
    "случае за ⌈log3n⌉взвешиваний.ТЕОРЕМА 6 Оценка. Для удобства доказательства пронумеруем все nмонет. Тогда нашей целью является определение номера фальшивой монеты – натурального числа от 1доn. Пусть мы как-то проделали kвзвешиваний. Запишем результаты для этого случая в виде строчки из kсимволов <,=,>следующим образом: если в результате взве- шивания левая чаша весов оказалась легче правой, пишем <, если правая оказалась легче левой, то пишем >, а если чаши весов оказались в равновесии, пишем =. Да- лее, если по результатам взвешиваний мы установили номер фальшивой монеты, то впишем его в конец строчки (если фальшивую монету удалось определить быстрее, чем за kвзвешиваний, то последние знаки в строчке можно дописать произвольно).ДОКАЗАТЕЛЬСТВО 11Основы теории информации Аналогично составим строчки и для других вариантов из kвзвешиваний. Таким обра- зом, получим табличку из строчек длины k, в конце некоторых из которых стоят но- мера. Из того, что фальшивая монета гарантированно определена, следует, что в этой табличке встретились все номера от 1доN(некоторые, возможно, не один раз). Но это означает, что nне больше, чем максимально возможное количество случаев, т.е. число всех возможных строчек для такой таблицы, то есть не больше, чем 3k. Итого имеем оценку 3k⩾n. Пример. Теперь разберемся с оптимальным алгоритмом взвешиваний. Мы должны убедиться, что при 3k−1< n⩽3kалгоритму достаточно kвзвешиваний для опреде- ления фальшивой монеты. База индукции: 1< n⩽3, одно взвешивание. Поскольку 1< n, то хотя бы две мо- неты у нас есть. Сравним их. Если одна из них легче, то она и является фальшивой. Если же монеты равны по весу, то обе они настоящие. При n= 2 так быть не мо- жет (в условии сказано, что фальшивая монета точно есть), а при n= 3, очевидно, фальшивой является третья монета. Индукционный переход. Пусть 3k−1< n⩽3k. Разделим nмонет на три непересекающихся множества – группы из ⌈n/3⌉,⌈n/3⌉ иn−2⌈n/3⌉монет. При каждом взвешивании выбранную группу будем целиком класть на чашку, таким образом среди групп окажутся: группа монет, попавших на одну чашку, попавших на другую чашку и не попавших ни на одну из чашек. Взве- сим первые две группы. Если одна легче, то фальшивая монета находится в ней, и поскольку 3k−2<⌈n/3⌉⩽3k−1, то по предположению индукции для нахождения фальшивой (среди монет этой группы) достаточно k−1взвешиваний. Если же эти две группы равны по весу, то фальшивая монета находится в третьей группе монет, не попавших ни на одну из чашек, в ней также не более 3k−1монет, и можно приме- нить предположение индукции. 12Основы теории информации Есть 100 камней, выложенных в порядке возрастания весов. За какое наименьшее число взвешиваний на чашечных весах без гирь можно проверить или опровергнуть утверждение: «Любые пять камней вместе тяжелее любых трех»?ЗАДАЧА 1 Есть несколько мешков, в каждом из которых достаточно много монет. В одном меш- ке монеты фальшивые, а во всех других настоящие. Известен вес настоящей монеты и известно, что фальшивая монета на 1 грамм легче настоящей. Есть весы, которые показывают точный вес любого набора монет. Как за одно взвешивание определить мешок с фальшивыми монетами?ЗАДАЧА 2 Рассмотрим лексикографический порядок на всех сочетаниях из 10по5элементов. а) Какой номер будет иметь сочетание {2,3,5,9,10}? б) Какое сочетание будет под номером 127?ЗАДАЧА 3 Илья хочет сообщить Владе некоторое слово из 10букв, в котором четыре раза встре- чается буква A, три",
    "Как за одно взвешивание определить мешок с фальшивыми монетами?ЗАДАЧА 2 Рассмотрим лексикографический порядок на всех сочетаниях из 10по5элементов. а) Какой номер будет иметь сочетание {2,3,5,9,10}? б) Какое сочетание будет под номером 127?ЗАДАЧА 3 Илья хочет сообщить Владе некоторое слово из 10букв, в котором четыре раза встре- чается буква A, три раза встречается буква Bи три раза встречается буква C. Од- нако канал связи между ними позволяет передавать лишь нули и единицы. Ребята хотят заранее договориться о способе кодирования слов так, чтобы в худшем случае использовать минимально возможное число бит для передачи информации. а) Разработайте такой способ кодирования. Какое количество бит потребуется для кодирования каждого слова при оптимальном способе кодирования? б) Какой двоичный код будет соответствовать слову BAABCCACAB ?ЗАДАЧА 4 Фокусник решил показать зрителям фокус с угадыванием карты. В колоде у зрителя есть несколько карт, он загадывает одну из них. Фокусник раскладывает все карты на 4 стопки и узнает у зрителя, в какой стопке оказалась задуманная карта. При каком наибольшем количестве карт можно наверняка определить задуманную карту за 3 вопроса?ЗАДАЧА 5 Имеется 12на вид неотличимых монет, из которых одна фальшивая. Все настоящие монеты весят одинаково, а фальшивая отличается от настоящих по весу, но неизвест- но, в какую сторону (легче или тяжелее). Имеются чашечные весы, на которых за одно взвешивание можно сравнить любые две группы монет по весу. За какое минималь- ное число взвешиваний гарантированно можно найти фальшивую монету и узнать, легче она или тяжелее, чем настоящие?ЗАДАЧА 6 Из11шаров два радиоактивны. Про любую кучку шаров за одну проверку можно узнать, имеется ли в ней хотя бы один радиоактивный шар (но нельзя узнать, сколько их). За какое наименьшее число проверок можно гарантированно выявить оба радио- активных шара?ЗАДАЧА 7 Есть 100-этажное здание. Известно, что если яйцо сбросить с высоты N-го этажа (или с большей высоты), то оно разобьется. Если его бросить с любого меньшего эта- жа, оно не разобьется. У нас есть всего два яйца, и если они оба разобьются, бросать больше будет нечего. За какое минимальное количество бросков наверняка получит-ЗАДАЧА 8 13Основы теории информации ся определить N? Имеется nразличных по весу монет. За одно взвешивание можно сравнить любые две монеты и узнать, какая из них тяжелее. Требуется найти вторую по весу монету среди данных nмонет. а) Докажите, что существует алгоритм, который гарантированно решает эту задачу заn+ log2n+O(1)сравнений. б) Докажите, что более оптимального алгоритма не существует.ЗАДАЧА 9 14"
  ],
  "metadata": [
    {
      "file_id": "Дискретная_математика_Лонгрид_основной_и_продвинутый_неделя_7_0105c868_luklsk",
      "file_name": "",
      "processed_at": "2025-04-20T01:16:42.095469",
      "formulas": []
    },
    {
      "file_id": "Дискретная_математика_Лонгрид_основной_и_продвинутый_неделя_7_0105c868_luklsk",
      "file_name": "",
      "processed_at": "2025-04-20T01:16:42.095469",
      "formulas": []
    },
    {
      "file_id": "Дискретная_математика_Лонгрид_основной_и_продвинутый_неделя_7_0105c868_luklsk",
      "file_name": "",
      "processed_at": "2025-04-20T01:16:42.095469",
      "formulas": []
    },
    {
      "file_id": "Дискретная_математика_Лонгрид_основной_и_продвинутый_неделя_7_0105c868_luklsk",
      "file_name": "",
      "processed_at": "2025-04-20T01:16:42.095469",
      "formulas": []
    },
    {
      "file_id": "Дискретная_математика_Лонгрид_основной_и_продвинутый_неделя_7_0105c868_luklsk",
      "file_name": "",
      "processed_at": "2025-04-20T01:16:42.095469",
      "formulas": []
    },
    {
      "file_id": "Дискретная_математика_Лонгрид_основной_и_продвинутый_неделя_7_0105c868_luklsk",
      "file_name": "",
      "processed_at": "2025-04-20T01:16:42.095469",
      "formulas": []
    },
    {
      "file_id": "Дискретная_математика_Лонгрид_основной_и_продвинутый_неделя_7_0105c868_luklsk",
      "file_name": "",
      "processed_at": "2025-04-20T01:16:42.095469",
      "formulas": []
    },
    {
      "file_id": "Дискретная_математика_Лонгрид_основной_и_продвинутый_неделя_7_0105c868_luklsk",
      "file_name": "",
      "processed_at": "2025-04-20T01:16:42.095469",
      "formulas": []
    },
    {
      "file_id": "Дискретная_математика_Лонгрид_основной_и_продвинутый_неделя_7_0105c868_luklsk",
      "file_name": "",
      "processed_at": "2025-04-20T01:16:42.095469",
      "formulas": []
    },
    {
      "file_id": "Дискретная_математика_Лонгрид_основной_и_продвинутый_неделя_7_0105c868_luklsk",
      "file_name": "",
      "processed_at": "2025-04-20T01:16:42.095469",
      "formulas": []
    },
    {
      "file_id": "Дискретная_математика_Лонгрид_основной_и_продвинутый_неделя_7_0105c868_luklsk",
      "file_name": "",
      "processed_at": "2025-04-20T01:16:42.095469",
      "formulas": []
    }
  ]
}